{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from 'contentlayer/source-files'\nimport readingTime from 'reading-time'\n\nexport const Component = defineDocumentType(() => ({\n  name: 'Component',\n  filePathPattern: `components/*.mdx`,\n  contentType: 'mdx',\n  fields: {\n    title: {\n      type: 'string',\n      description: 'The title of the post',\n      required: true,\n    },\n    date: {\n      type: 'date',\n      description: 'The date of the post',\n      required: true,\n    },\n  },\n  computedFields: {\n    slug: {\n      type: 'string',\n      resolve: (doc) => doc._raw.sourceFileName.replace(/\\.mdx$/, '')\n    },\n    wordCount: {\n      type: 'number',\n      resolve: (doc) => doc.body.raw.split(/\\s+/gu).length\n    },\n    readingTime: { type: 'json', resolve: (doc) => readingTime(doc.body.raw) },\n  },\n}))\n\nexport const Doc = defineDocumentType(() => ({\n  name: 'Doc',\n  filePathPattern: `docs/*.mdx`,\n  contentType: 'mdx',\n  fields: {\n    title: {\n      type: 'string',\n      description: 'The title of the letter',\n      required: true,\n    },\n    date: {\n      type: 'date',\n      description: 'The date of the letter',\n      required: true,\n    },\n    unlisted: {\n      type: 'boolean',\n      description: 'Whether or not to show on the main homepage feed'\n    }\n  },\n  computedFields: {\n    slug: {\n      type: 'string',\n      resolve: (doc) => doc._raw.sourceFileName.replace(/\\.mdx$/, '')\n    },\n    wordCount: {\n      type: 'number',\n      resolve: (doc) => doc.body.raw.split(/\\s+/gu).length\n    },\n    readingTime: { type: 'json', resolve: (doc) => readingTime(doc.body.raw) },\n  },\n}))\n\nexport default makeSource({\n  contentDirPath: 'data',\n  documentTypes: [Component, Doc],\n})"],
  "mappings": ";AAAA;AACA;AAEO,IAAM,YAAY,mBAAmB,MAAO;AAAA,EACjD,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO;AAAA,MACL,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,EACF;AAAA,EACA,gBAAgB;AAAA,IACd,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ,IAAI,KAAK,eAAe,QAAQ,UAAU,EAAE;AAAA,IAChE;AAAA,IACA,WAAW;AAAA,MACT,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ,IAAI,KAAK,IAAI,MAAM,OAAO,EAAE;AAAA,IAChD;AAAA,IACA,aAAa,EAAE,MAAM,QAAQ,SAAS,CAAC,QAAQ,YAAY,IAAI,KAAK,GAAG,EAAE;AAAA,EAC3E;AACF,EAAE;AAEK,IAAM,MAAM,mBAAmB,MAAO;AAAA,EAC3C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO;AAAA,MACL,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,UAAU;AAAA,MACR,MAAM;AAAA,MACN,aAAa;AAAA,IACf;AAAA,EACF;AAAA,EACA,gBAAgB;AAAA,IACd,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ,IAAI,KAAK,eAAe,QAAQ,UAAU,EAAE;AAAA,IAChE;AAAA,IACA,WAAW;AAAA,MACT,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ,IAAI,KAAK,IAAI,MAAM,OAAO,EAAE;AAAA,IAChD;AAAA,IACA,aAAa,EAAE,MAAM,QAAQ,SAAS,CAAC,QAAQ,YAAY,IAAI,KAAK,GAAG,EAAE;AAAA,EAC3E;AACF,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACxB,gBAAgB;AAAA,EAChB,eAAe,CAAC,WAAW,GAAG;AAChC,CAAC;",
  "names": []
}
